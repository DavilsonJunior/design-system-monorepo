{"version":3,"file":"es.string.match-56d7f90d.js","sources":["../../../../node_modules/core-js/modules/es.object.freeze.js","../../../../node_modules/core-js/internals/advance-string-index.js","../../../../node_modules/core-js/modules/es.string.split.js","../../../../node_modules/core-js/modules/es.string.match.js"],"sourcesContent":["var $ = require('../internals/export');\nvar FREEZING = require('../internals/freezing');\nvar fails = require('../internals/fails');\nvar isObject = require('../internals/is-object');\nvar onFreeze = require('../internals/internal-metadata').onFreeze;\n\n// eslint-disable-next-line es/no-object-freeze -- safe\nvar $freeze = Object.freeze;\nvar FAILS_ON_PRIMITIVES = fails(function () { $freeze(1); });\n\n// `Object.freeze` method\n// https://tc39.es/ecma262/#sec-object.freeze\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {\n  freeze: function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(onFreeze(it)) : it;\n  }\n});\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","'use strict';\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar arraySlice = require('../internals/array-slice-simple');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar MAX_UINT32 = 0xFFFFFFFF;\nvar min = Math.min;\nvar $push = [].push;\nvar exec = uncurryThis(/./.exec);\nvar push = uncurryThis($push);\nvar stringSlice = uncurryThis(''.slice);\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = toString(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return call(nativeSplit, string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = call(regexpExec, separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          push(output, stringSlice(string, lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) apply($push, output, arraySlice(match, 1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !exec(separatorCopy, '')) push(output, '');\n      } else push(output, stringSlice(string, lastLastIndex));\n      return output.length > lim ? arraySlice(output, 0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = isNullOrUndefined(separator) ? undefined : getMethod(separator, SPLIT);\n      return splitter\n        ? call(splitter, separator, O, limit)\n        : call(internalSplit, toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n\n      if (res.done) return res.value;\n\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          push(A, stringSlice(S, p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            push(A, z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      push(A, stringSlice(S, p));\n      return A;\n    }\n  ];\n}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n","'use strict';\nvar call = require('../internals/function-call');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar getMethod = require('../internals/get-method');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, MATCH);\n      return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n"],"names":["$","require$$0","FREEZING","require$$1","fails","require$$2","isObject","require$$3","onFreeze","require$$4","$freeze","FAILS_ON_PRIMITIVES","it","charAt","advanceStringIndex","S","index","unicode","apply","call","uncurryThis","fixRegExpWellKnownSymbolLogic","anObject","isNullOrUndefined","require$$5","isRegExp","require$$6","requireObjectCoercible","require$$7","speciesConstructor","require$$8","require$$9","toLength","require$$10","toString","require$$11","getMethod","require$$12","arraySlice","require$$13","callRegExpExec","require$$14","regexpExec","require$$15","stickyHelpers","require$$16","require$$17","UNSUPPORTED_Y","MAX_UINT32","min","$push","exec","push","stringSlice","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","re","originalExec","result","SPLIT","nativeSplit","maybeCallNative","internalSplit","separator","limit","string","lim","output","flags","lastLastIndex","separatorCopy","match","lastIndex","lastLength","O","splitter","rx","res","C","unicodeMatching","p","q","A","z","e","i","regExpExec","MATCH","nativeMatch","regexp","matcher","fullUnicode","n","matchStr"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}